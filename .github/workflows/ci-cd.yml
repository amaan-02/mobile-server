name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Use Node.js version 20

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm ci

      # Step 4: Run tests
      - name: Run tests
        run: npm test

  docker-build-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build-test

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Build the Docker image
      - name: Build Docker Image
        run: |
          # Ensure Docker Build
          echo "Building Docker image..."
          docker build -t ${{ secrets.DOCKER_USERNAME }}/mobile-server:latest .

      # Step 4: Push the Docker image to DockerHub
      - name: Push Docker Image
        run: |
          echo "Pushing Docker image to DockerHub..."
          docker push ${{ secrets.DOCKER_USERNAME }}/mobile-server:latest

  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: docker-build-push

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Deploy Docker image to the server (using Docker CLI)
      - name: Deploy Docker Image via Docker CLI
        run: |
          echo "Deploying Docker image to the server..."

          # Pull Docker image on the server
          docker pull ${{ secrets.DOCKER_USERNAME }}/mobile-server:latest

          # Stop and remove the existing container (if any)
          docker stop mobile-server || true
          docker rm mobile-server || true

          # Run the new container
          docker run -d --name mobile-server -p 5000:5000 ${{ secrets.DOCKER_USERNAME }}/mobile-server:latest
